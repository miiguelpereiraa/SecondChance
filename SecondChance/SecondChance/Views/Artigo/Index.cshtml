@* Indica que a view recebe um objecto do tipo PagedList *@
@model PagedList.IPagedList<SecondChance.Models.Artigo>
@* MVC helper para os botões de paginação *@
@using PagedList.Mvc
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Lista de Artigos</h2>

<p>
    @if (User.IsInRole("Utilizador"))
    {
        @Html.ActionLink("Inserir Artigo", "Create")
    }
</p>

@using (Html.BeginForm("Index", "Artigo", FormMethod.Get))
{
    <p>
        Pesquisar Artigo: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Pesquisar" />
    </p>
}

<table class="table">
    <tr>
        <th>

        </th>
        <th>
            @Html.ActionLink("Categoria", "Index", new { sortOrder = ViewBag.ordenarCategoria, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Nome do Utilizador", "Index", new { sortOrder = ViewBag.ordenarNome, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Título", "Index", new { sortOrder = ViewBag.ordenarTitulo, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Preço", "Index", new { sortOrder = ViewBag.ordenarPreco, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Descrição
        </th>
        @if (User.IsInRole("Gestores"))
        {
            <text>
                <th>
                    @Html.ActionLink("Validado", "Index", new { sortOrder = ViewBag.ordenarValidado, currentFilter = ViewBag.CurrentFilter })
                </th>
            </text>
        }
        
        <th></th>
    </tr>

@foreach (var item in Model) {
<tr>
    <td>
        <img src="~/Imagens/@item.ListaRecMultimedia.First().Designacao" alt="Image" width="100" />
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Categoria.Designacao)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Dono.Nome)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Titulo)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Preco) €
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Descricao)
    </td>
    @if (User.IsInRole("Gestores"))
    {
        <text>
            <td>
                @Html.DisplayFor(modelItem => item.Validado)
            </td>
        </text>
    }
    <td>
        @if (User.IsInRole("Utilizador"))
        {
            if (User.Identity.Name == item.Dono.UsernameID || User.IsInRole("Gestores"))
            {
                <text>
                    @Html.ActionLink("Editar", "Edit", new { id = item.IdArtigo })
                    <br />
                    @Html.ActionLink("Eliminar", "Delete", new { id = item.IdArtigo })
                    <br />
                    @Html.ActionLink("Detalhes", "Details", new { id = item.IdArtigo })
                </text>
            }
            else
            {
                <text>
                    @Html.ActionLink("Detalhes", "Details", new { id = item.IdArtigo })
                </text>
            }

        }
    </td>
</tr>
}

</table>
<br />
@* Número de Página e botões de paginação *@
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter}))
